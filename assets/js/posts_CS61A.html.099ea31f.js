"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[972],{8789:(s,i)=>{i.A=(s,i)=>{const a=s.__vccOpts||s;for(const[s,n]of i)a[s]=n;return a}},9028:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>p,data:()=>k});var n=a(5252);const e=a.p+"assets/img/61AW11.1fc600f7.png",t=a.p+"assets/img/61AW12.18181434.png",l=a.p+"assets/img/61AW13.564da309.png",h={},p=(0,a(8789).A)(h,[["render",function(s,i){return(0,n.uX)(),(0,n.CE)("div",null,i[0]||(i[0]=[(0,n.Fv)('<h2 id="week1" tabindex="-1"><a class="header-anchor" href="#week1"><span>week1</span></a></h2><h3 id="lecture" tabindex="-1"><a class="header-anchor" href="#lecture"><span>Lecture</span></a></h3><h4 id="welcome" tabindex="-1"><a class="header-anchor" href="#welcome"><span>Welcome</span></a></h4><p>The first lecture just a simple explaination of CS61A and explnation of the <code>Expression Tree</code> which is composed of a operator and several operands, so I just paste the picture of the Tree.<br><img src="'+e+'" alt="alt text"></p><blockquote><p>Easy but interesting.<br> If you learned data structure, you may think this is <code>n-ary tree</code>.</p></blockquote><h4 id="functions" tabindex="-1"><a class="header-anchor" href="#functions"><span>Functions</span></a></h4><h5 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h5><h6 id="built-in" tabindex="-1"><a class="header-anchor" href="#built-in"><span>built-in</span></a></h6><p>Like c/c++, python also has its own way to name or rename a parameter, a function or a variable and so on. The lecture will introduce it at beginning.</p><p><code>Ctrl + L</code> is used to flash the terminal in python session.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Traceback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (most </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">recent</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> call</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):  </span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  File</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;&lt;stdin&gt;&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 1,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">modul</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">NameError:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;pi&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> defined</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>oops! No pi! This means the parameter is not a built-in parameter. We have to <code>import</code> it.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> math</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">3.141592653589793</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The same goes for imported functions.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> math</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sin(pi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)  </span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">1.2246467991473532e-16</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sin(pi/2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)  </span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">1.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>You may find it not zero after sin(pi), because of the type of data storage in the computer or just a data cut. Not important.</p></blockquote><h6 id="name-by-ourselves" tabindex="-1"><a class="header-anchor" href="#name-by-ourselves"><span>name by ourselves</span></a></h6><p>We can also name our own parameter:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">radius</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 10</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">radius</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Even multiple variables named simultaneously is also supported:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">area,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> circ</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pi</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> radius</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">radius,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pi</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> radius</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">area</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">314.1592653589793</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">circ</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">62.83185307179586</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The same goes for imported functions.</p><h6 id="define" tabindex="-1"><a class="header-anchor" href="#define"><span>define</span></a></h6><p>We can edit our functions by <code>def</code>:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">def</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> square</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">:</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> mul</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">x,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">square(11</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">121</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If we change the value of parameter, the value of expression named by us will not change, but if define a functions will solve the issue:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">def</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> area</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">:</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pi</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> radius</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> radius</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">area</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">314.1592653589793</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">radius</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 20</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">area</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">1256.6370614359173</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>A function differs from a name in that its return expression here gets re-evaluated every time it&#39;s called.</p></blockquote><h4 id="defining-functions" tabindex="-1"><a class="header-anchor" href="#defining-functions"><span>defining functions</span></a></h4><p>structure of defining:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">def</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">e</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">formal parameters</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> expressio</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Fuctions will be evaluated when it is called.</p></blockquote><p>The lecture also introduce the difference between local frames and global frames. I passed it for my c&amp;c++ basics.</p><h4 id="environment-diagrams" tabindex="-1"><a class="header-anchor" href="#environment-diagrams"><span>Environment Diagrams</span></a></h4><p><img src="'+t+'" alt="alt text"></p><p>Online Python Tutor:</p><blockquote><p>https://pythontutor.com/visualize.html#</p></blockquote><h4 id="print-and-none" tabindex="-1"><a class="header-anchor" href="#print-and-none"><span>Print and None</span></a></h4><p>Just talk about the difference of print and evaluate and <code>Nonetype</code>.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">None</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">None</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="'+l+'" alt="alt text"></p><h3 id="lab" tabindex="-1"><a class="header-anchor" href="#lab"><span>Lab</span></a></h3><h4 id="lab0-getting-started" tabindex="-1"><a class="header-anchor" href="#lab0-getting-started"><span>Lab0:Getting Started</span></a></h4><blockquote><p>Download starter files from: <code>https://cs61a.org/lab/lab00/lab00.zip</code></p></blockquote><h5 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h5><p>This lab explains how to setup your computer to complete assignments and introduces some of the basics of Python.</p><p>Components cheek passed, so skip them.</p><h5 id="setup" tabindex="-1"><a class="header-anchor" href="#setup"><span>Setup</span></a></h5><p>skip.</p><h5 id="first-assignment" tabindex="-1"><a class="header-anchor" href="#first-assignment"><span>First Assignment</span></a></h5><h6 id="what-would-python-do" tabindex="-1"><a class="header-anchor" href="#what-would-python-do"><span>What Would Python Do?</span></a></h6><p>Enter the following in your terminal to begin this section:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># we don&#39;t have edu email of berkeley, so we need to add --local</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ok</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --local</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Esay to pass:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">=====================================================================</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Assignment:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Lab</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">OK,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> v1.18.1</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">=====================================================================</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Unlocking</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> tests</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">At</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> each</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;? &quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> type</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> what</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> would</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> expect</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> output</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> be.</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Type</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> exit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">to</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> quit</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">---------------------------------------------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Python</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Basics</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Suite</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Case</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cases</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> remaining:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">What</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> would</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Python</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> display?</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> If</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> stuck,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> try</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> it</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> out</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Python</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">interpreter!</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">x</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 20</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">x</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 22</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> OK!</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">x</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 20</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> OK!</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">y</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 5</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">y</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> y</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">y</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 16</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> OK!</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">y</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> x</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 28</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> OK!</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">---------------------------------------------------------------------</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="implementing-functions" tabindex="-1"><a class="header-anchor" href="#implementing-functions"><span>Implementing Functions</span></a></h6><p>lazy to think:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> twenty_twenty_four</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">():</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;&quot;&quot;Come up with the most creative expression that evaluates to 2024</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    using only numbers and the +, *, and - operators.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    &gt;&gt;&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">twenty_twenty_four()</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    2024</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2024</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="running-tests" tabindex="-1"><a class="header-anchor" href="#running-tests"><span>Running Tests</span></a></h6><p>use <code>ok</code> to check:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ok</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --local</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>check passed:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">=====================================================================</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Assignment:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Lab</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">OK,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> v1.18.1</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">=====================================================================</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Running</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> tests</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">---------------------------------------------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Test</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> summary</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    2</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cases</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> passed!</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cases</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> failed.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="appendix-useful-python-command-line-options" tabindex="-1"><a class="header-anchor" href="#appendix-useful-python-command-line-options"><span>Appendix: Useful Python Command Line Options</span></a></h6><p><code>-i</code>: opens an interactive session</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lab00.py</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">1</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-m doctest</code>: run the examples in the docstrings of functions</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># doctest</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> twenty_twenty_four</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">    2024</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If all doctest passed, no outputs.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> doctest</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lab00.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',70)]))}]]),k=JSON.parse('{"path":"/posts/CS61A.html","title":"CS61A","lang":"zh-CN","frontmatter":{"title":"CS61A","category":["CS61A"],"tag":["MOOC","CS","berkeley"],"sticky":true,"star":true,"order":-1.4,"description":"week1 Lecture Welcome The first lecture just a simple explaination of CS61A and explnation of the Expression Tree which is composed of a operator and several operands, so I just...","head":[["meta",{"property":"og:url","content":"https://newzone.top/posts/CS61A.html"}],["meta",{"property":"og:site_name","content":"CS_Blog"}],["meta",{"property":"og:title","content":"CS61A"}],["meta",{"property":"og:description","content":"week1 Lecture Welcome The first lecture just a simple explaination of CS61A and explnation of the Expression Tree which is composed of a operator and several operands, so I just..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-01T10:28:19.000Z"}],["meta",{"property":"article:tag","content":"MOOC"}],["meta",{"property":"article:tag","content":"CS"}],["meta",{"property":"article:tag","content":"berkeley"}],["meta",{"property":"article:modified_time","content":"2025-01-01T10:28:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CS61A\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-01T10:28:19.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"week1","slug":"week1","link":"#week1","children":[{"level":3,"title":"Lecture","slug":"lecture","link":"#lecture","children":[]},{"level":3,"title":"Lab","slug":"lab","link":"#lab","children":[]}]}],"git":{"createdTime":1735727299000,"updatedTime":1735727299000,"contributors":[{"name":"YuanaHao","email":"youthandqueen@qq.com","commits":1}]},"readingTime":{"minutes":2.68,"words":803},"filePathRelative":"_posts/CS61A.md","localizedDate":"2025年1月1日","excerpt":"<h2>week1</h2>\\n<h3>Lecture</h3>\\n<h4>Welcome</h4>\\n<p>The first lecture just a simple explaination of CS61A and explnation of the <code>Expression Tree</code> which is composed of a operator and several operands, so I just paste the picture of the Tree.<br>\\n</p>\\n<blockquote>\\n<p>Easy but interesting.<br>\\nIf you learned data structure, you may think this is <code>n-ary tree</code>.</p>\\n</blockquote>","autoDesc":true}')}}]);